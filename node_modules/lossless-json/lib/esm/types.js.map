{"version":3,"file":"types.js","names":[],"sources":["../../src/types.ts"],"sourcesContent":["export type JSONPrimitive = string | number | boolean | null\nexport type JSONValue =\n  | { [key: string]: JSONValue } // object\n  | JSONValue[] // array\n  | JSONPrimitive\nexport type JSONObject = { [key: string]: JSONValue }\nexport type JSONArray = JSONValue[]\n\nexport type JavaScriptPrimitive = string | number | boolean | null | bigint | Date | unknown\nexport type JavaScriptValue =\n  | { [key: string]: JavaScriptValue } // object\n  | JavaScriptValue[] // array\n  | JavaScriptPrimitive\nexport type JavaScriptObject = { [key: string]: JavaScriptValue }\nexport type JavaScriptArray = JavaScriptValue[]\n\nexport type Reviver = (key: string, value: JSONValue) => JavaScriptValue\n\nexport type NumberParser = (value: string) => JavaScriptValue\n\nexport type Replacer =\n  | ((key: string, value: JavaScriptObject) => JSONValue | undefined)\n  | Array<string | number>\n\nexport interface NumberStringifier {\n  test: (value: JavaScriptValue) => boolean\n  stringify: (value: JavaScriptValue) => string\n}\n\nexport type GenericObject<T> = {\n  [key: string]: T\n}\n"],"mappings":""}