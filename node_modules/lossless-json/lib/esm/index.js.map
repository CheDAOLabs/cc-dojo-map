{"version":3,"file":"index.js","names":["config","parse","stringify","LosslessNumber","isLosslessNumber","toLosslessNumber","reviveDate","parseLosslessNumber","parseNumberAndBigInt","UnsafeNumberReason","isInteger","isNumber","isSafeNumber","toSafeNumberOrThrow","getUnsafeNumberReason"],"sources":["../../src/index.ts"],"sourcesContent":["export { config } from './config.js'\nexport { parse } from './parse.js'\nexport { stringify } from './stringify.js'\nexport { LosslessNumber, isLosslessNumber, toLosslessNumber } from './LosslessNumber.js'\nexport { reviveDate } from './reviveDate.js'\nexport { parseLosslessNumber, parseNumberAndBigInt } from './numberParsers.js'\nexport {\n  UnsafeNumberReason,\n  isInteger,\n  isNumber,\n  isSafeNumber,\n  toSafeNumberOrThrow,\n  getUnsafeNumberReason\n} from './utils.js'\nexport * from './types.js'\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;AACpC,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,cAAc,EAAEC,gBAAgB,EAAEC,gBAAgB,QAAQ,qBAAqB;AACxF,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,mBAAmB,EAAEC,oBAAoB,QAAQ,oBAAoB;AAC9E,SACEC,kBAAkB,EAClBC,SAAS,EACTC,QAAQ,EACRC,YAAY,EACZC,mBAAmB,EACnBC,qBAAqB,QAChB,YAAY;AACnB,cAAc,YAAY"}