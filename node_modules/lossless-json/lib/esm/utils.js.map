{"version":3,"file":"utils.js","names":["isInteger","value","INTEGER_REGEX","test","isNumber","NUMBER_REGEX","isSafeNumber","config","num","parseFloat","str","String","v","extractSignificantDigits","s","approx","requiredDigits","length","startsWith","substring","UnsafeNumberReason","getUnsafeNumberReason","undefined","truncate_integer","isFinite","overflow","underflow","truncate_float","toSafeNumberOrThrow","number","unsafeReason","unsafeReasonText","replace","Error","concat","EXPONENTIAL_PART_REGEX","DOT_REGEX","TRAILING_ZEROS_REGEX","LEADING_MINUS_AND_ZEROS_REGEX"],"sources":["../../src/utils.ts"],"sourcesContent":["/**\n * Test whether a string contains an integer number\n */\nexport function isInteger(value: string): boolean {\n  return INTEGER_REGEX.test(value)\n}\n\nconst INTEGER_REGEX = /^-?[0-9]+$/\n\n/**\n * Test whether a string contains a number\n * http://stackoverflow.com/questions/13340717/json-numbers-regular-expression\n */\nexport function isNumber(value: string): boolean {\n  return NUMBER_REGEX.test(value)\n}\n\nconst NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/\n\n/**\n * Test whether a string can be safely represented with a number\n * without information loss.\n *\n * When approx is true, floating point numbers that lose a few digits but\n * are still approximately equal in value are considered safe too.\n * Integer numbers must still be exactly equal.\n */\nexport function isSafeNumber(\n  value: string,\n  config?: {\n    approx: boolean\n  }\n): boolean {\n  const num = parseFloat(value)\n  const str = String(num)\n\n  const v = extractSignificantDigits(value)\n  const s = extractSignificantDigits(str)\n\n  if (v === s) {\n    return true\n  }\n\n  if (config?.approx === true) {\n    // A value is approximately equal when:\n    // 1. it is a floating point number, not an integer\n    // 2. it has at least 14 digits\n    // 3. the first 14 digits are equal\n    const requiredDigits = 14\n    if (\n      !isInteger(value) &&\n      s.length >= requiredDigits &&\n      v.startsWith(s.substring(0, requiredDigits))\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport enum UnsafeNumberReason {\n  underflow = 'underflow',\n  overflow = 'overflow',\n  truncate_integer = 'truncate_integer',\n  truncate_float = 'truncate_float'\n}\n\n/**\n * When the provided value is an unsafe number, describe what the reason is:\n * overflow, underflow, truncate_integer, or truncate_float.\n * Returns undefined when the value is safe.\n */\nexport function getUnsafeNumberReason(value: string): UnsafeNumberReason | undefined {\n  if (isSafeNumber(value, { approx: false })) {\n    return undefined\n  }\n\n  if (isInteger(value)) {\n    return UnsafeNumberReason.truncate_integer\n  }\n\n  const num = parseFloat(value)\n  if (!isFinite(num)) {\n    return UnsafeNumberReason.overflow\n  }\n\n  if (num === 0) {\n    return UnsafeNumberReason.underflow\n  }\n\n  return UnsafeNumberReason.truncate_float\n}\n\n/**\n * Convert a string into a number when it is safe to do so.\n * Throws an error otherwise, explaining the reason.\n */\nexport function toSafeNumberOrThrow(\n  value: string,\n  config?: {\n    approx: boolean\n  }\n): number {\n  const number = parseFloat(value)\n\n  const unsafeReason = getUnsafeNumberReason(value)\n  if (\n    config?.approx === true\n      ? unsafeReason && unsafeReason !== UnsafeNumberReason.truncate_float\n      : unsafeReason\n  ) {\n    const unsafeReasonText = unsafeReason.replace(/_\\w+$/, '')\n    throw new Error(\n      'Cannot safely convert to number: ' +\n        `the value '${value}' would ${unsafeReasonText} and become ${number}`\n    )\n  }\n\n  return number\n}\n\n/**\n * Get the significant digits of a number.\n *\n * For example:\n *   '2.34' returns '234'\n *   '-77' returns '77'\n *   '0.003400' returns '34'\n *   '120.5e+30' returns '1205'\n **/\nexport function extractSignificantDigits(value: string): string {\n  return (\n    value\n      // from \"-0.250e+30\" to \"-0.250\"\n      .replace(EXPONENTIAL_PART_REGEX, '')\n\n      // from \"-0.250\" to \"-0250\"\n      .replace(DOT_REGEX, '')\n\n      // from \"-0250\" to \"-025\"\n      .replace(TRAILING_ZEROS_REGEX, '')\n\n      // from \"-025\" to \"25\"\n      .replace(LEADING_MINUS_AND_ZEROS_REGEX, '')\n  )\n}\n\nconst EXPONENTIAL_PART_REGEX = /[eE][+-]?\\d+$/\nconst LEADING_MINUS_AND_ZEROS_REGEX = /^-?(0*)?/\nconst DOT_REGEX = /\\./\nconst TRAILING_ZEROS_REGEX = /0+$/\n"],"mappings":"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"}