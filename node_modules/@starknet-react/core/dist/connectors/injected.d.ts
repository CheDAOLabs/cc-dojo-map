import { AccountInterface } from 'starknet';
import { Connector } from './base';
import { AccountChangeEventHandler } from 'get-starknet-core';
/** Injected connector options. */
export interface InjectedConnectorOptions {
    /** The wallet id. */
    id: string;
}
export declare class InjectedConnector extends Connector<InjectedConnectorOptions> {
    private _wallet?;
    constructor({ options }: {
        options: InjectedConnectorOptions;
    });
    available(): boolean;
    ready(): Promise<boolean>;
    connect(): Promise<AccountInterface>;
    disconnect(): Promise<void>;
    account(): Promise<AccountInterface | null>;
    get id(): string;
    get name(): string;
    get icon(): string;
    initEventListener(accountChangeCb: AccountChangeEventHandler): Promise<void>;
    removeEventListener(accountChangeCb: AccountChangeEventHandler): Promise<void>;
    private ensureWallet;
}
