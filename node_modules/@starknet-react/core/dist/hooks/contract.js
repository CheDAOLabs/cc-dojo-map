"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useContractFactory = exports.useContract = void 0;
const react_1 = require("react");
const starknet_1 = require("starknet");
const providers_1 = require("../providers");
/**
 * Hook to bind a `Contract` instance.
 *
 * @remarks
 *
 * The returned contract is a starknet.js `Contract` object.
 *
 * @example
 * This example creates a new contract from its address and abi.
 * ```tsx
 * function Component() {
 *   const { contract } = useContract({
 *     address: ethAddress,
 *     abi: compiledErc20.abi
 *   })
 *
 *   return <span>{contract.address}</span>
 * }
 * ```
 */
function useContract({ abi, address }) {
    const { library } = (0, providers_1.useStarknet)();
    const contract = (0, react_1.useMemo)(() => {
        if (abi && address && library) {
            return new starknet_1.Contract(abi, address, library);
        }
    }, [abi, address, library]);
    return { contract };
}
exports.useContract = useContract;
/**
 * Hook to create a `ContractFactory`.
 *
 * @remarks
 *
 * The returned contract factory is a starknet.js `ContractFactory` object.
 *
 * This hook works well with `useDeploy`.
 *
 * @example
 * This example shows how to create a contract factory.
 * ```tsx
 * function Component() {
 *   const { account } = useAccount()
 *   const { contractFactory } = useContractFactory({
 *     compiledContract: compiledErc20,
 *     classHash: erc20ClassHash,
 *     abi: compiledErc20.abi,
 *     account: account
 *   })
 *
 *   return <p>Nothing to see here...</p>
 * }
 * ```
 */
function useContractFactory({ compiledContract, classHash, abi, account, }) {
    const contractFactory = (0, react_1.useMemo)(() => {
        if (compiledContract && account && classHash) {
            return new starknet_1.ContractFactory(compiledContract, classHash, account, abi);
        }
    }, [compiledContract, classHash, account, abi]);
    return { contractFactory };
}
exports.useContractFactory = useContractFactory;
//# sourceMappingURL=contract.js.map