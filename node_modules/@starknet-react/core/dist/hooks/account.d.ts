import { AccountInterface } from 'starknet';
import { Connector } from '../connectors';
/** Account connection status. */
export type AccountStatus = 'connected' | 'disconnected' | 'connecting' | 'reconnecting';
/**
 * Value returned from `useAccount`.
 */
export interface UseAccountResult {
    /** The connected account object. */
    account?: AccountInterface;
    /** The address of the connected account. */
    address?: string;
    /** The connected connector. */
    connector?: Connector;
    isConnecting?: boolean;
    isReconnecting?: boolean;
    isConnected?: boolean;
    isDisconnected?: boolean;
    /** The connection status. */
    status: AccountStatus;
}
export interface UseAccountConfig {
    /** Function to invoke when connected */
    onConnect?: (args: {
        address?: UseAccountResult['address'];
        connector?: UseAccountResult['connector'];
    }) => void;
    onDisconnect?: () => void;
}
/**
 * Hook for accessing the account and its connection status.
 *
 * @remarks
 *
 * This hook is used to access the `AccountInterface` object provided by the
 * currently connected wallet.
 *
 * @example
 * This example shows how to display the wallet connection status and
 * the currently connected wallet address.
 * ```tsx
 * function Component() {
 *   const { account, address, status } = useAccount()
 *
 *   if (status === 'disconnected') return <p>Disconnected</p>
 *   return <p>Account: {address}</p>
 * }
 * ```
 */
export declare function useAccount({ onConnect, onDisconnect }?: UseAccountConfig): UseAccountResult;
