var l={storeImportPath:"@latticexyz/store/src/",userTypesFilename:"common.sol",codegenDirectory:"codegen",codegenIndexFilename:"index.sol"},p={namespace:"",enums:{},userTypes:{}},c={directory:"tables",keySchema:{key:"bytes32"},tableIdArgument:!1,storeArgument:!0,offchainOnly:!1};import{AbiTypes as E,StaticAbiTypes as v}from"@latticexyz/schema-type/deprecated";import{z as t,ZodIssueCode as i}from"zod";import{getDuplicates as y,parseStaticArray as R,STORE_NAME_MAX_LENGTH as z,zObjectName as g,zUserEnum as D,zValueName as S,zNamespace as k,zName as O}from"@latticexyz/config";var j=g,I=S,L=S,_=g,K=g,T=t.string(),P=t.string(),q=t.record(I,P).default(c.keySchema),U=t.record(L,T).refine(e=>Object.keys(e).length>0,"Table schema may not be empty"),B=T.transform(e=>U.parse({value:e})),M=U.or(B);function ie(e,n){let s={};for(let[r,o]of Object.entries(e))s[r]=n[o]?.internalType??o;return s}var b=t.object({directory:t.string().default(c.directory),name:O.optional(),tableIdArgument:t.boolean().default(c.tableIdArgument),storeArgument:t.boolean().default(c.storeArgument),dataStruct:t.boolean().optional(),keySchema:q,valueSchema:M,offchainOnly:t.boolean().default(c.offchainOnly)}).transform(e=>(Object.keys(e.valueSchema).length===1?e.dataStruct??=!1:e.dataStruct??=!0,e)),$=T.transform(e=>b.parse({valueSchema:{value:e}})),H=b.or($),G=t.record(j,H).transform(e=>{for(let n of Object.keys(e)){let s=e[n];s.name=n.slice(0,z),e[n]=s}return e}),V=t.object({enums:t.record(_,D).default(p.enums)}),w=t.object({filePath:t.string(),internalType:t.string()}),X=t.object({userTypes:t.record(K,w).default(p.userTypes)}),h=t.object({namespace:k.default(p.namespace),storeImportPath:t.string().default(l.storeImportPath),tables:G,userTypesFilename:t.string().default(l.userTypesFilename),codegenDirectory:t.string().default(l.codegenDirectory),codegenIndexFilename:t.string().default(l.codegenIndexFilename)}).merge(V).merge(X),ce=h.superRefine(x),me=h.catchall(t.any()).superRefine(x);function x(e,n){for(let a of Object.values(e.tables)){let m=Object.keys(a.keySchema),A=Object.keys(a.valueSchema),f=y([...m,...A]);f.length>0&&n.addIssue({code:i.custom,message:`Field and key names within one table must be unique: ${f.join(", ")}`})}let s=Object.keys(e.tables),r=[...Object.keys(e.enums),...Object.keys(e.userTypes)],o=r,C=[...s,...o],d=y(C);d.length>0&&n.addIssue({code:i.custom,message:`Table library names, enum names, user type names must be globally unique: ${d.join(", ")}`});let N=Object.values(e.tables).map(({name:a})=>a),u=y(N);u.length>0&&n.addIssue({code:i.custom,message:`Table names must be unique: ${u.join(", ")}`});for(let a of Object.values(e.tables)){for(let m of Object.values(a.keySchema))F(r,m,n);for(let m of Object.values(a.valueSchema))Z(o,r,m,n)}}function Z(e,n,s,r){if(!E.includes(s)&&!e.includes(s)){let o=R(s);o?J(n,o.elementType,o.staticLength,r):r.addIssue({code:i.custom,message:`${s} is not a valid abi type, and is not defined in userTypes`})}}function F(e,n,s){!v.includes(n)&&!e.includes(n)&&s.addIssue({code:i.custom,message:`${n} is not a static type`})}function J(e,n,s,r){F(e,n,r),s===0?r.addIssue({code:i.custom,message:"Static array length must not be 0"}):s>=2**16&&r.addIssue({code:i.custom,message:"Static array length must be less than 2**16"})}export{l as a,p as b,c,M as d,ie as e,H as f,G as g,V as h,X as i,ce as j,me as k};
//# sourceMappingURL=chunk-HF5IT7CK.js.map