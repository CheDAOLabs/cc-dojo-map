import{a as R}from"./chunk-UPQEB2HW.js";import z from"path";import{parse as L,visit as S}from"@solidity-parser/parser";function re(t,r){let n=L(t),i=!1,s=[],o=[],T=[];if(S(n,{ContractDefinition({name:y}){y===r&&(i=!0)},FunctionDefinition({name:y,visibility:p,parameters:c,stateMutability:a,returnParameters:g,isConstructor:C,isFallback:M,isReceiveEther:F},u){if(u!==void 0&&u.type==="ContractDefinition"&&u.name===r)try{if(C||M||F)return;if(p==="default")throw new R("Visibility is not specified");if(p==="external"||p==="public"){o.push({name:y===null?"":y,parameters:c.map(l),stateMutability:a||"",returnParameters:g===null?[]:g.map(l)});for(let{typeName:I}of c.concat(g??[])){let k=m(I);s=s.concat(Y(n,k))}}}catch(I){throw I instanceof R&&(I.message=`Function "${y}" in contract "${r}": ${I.message}`),I}},CustomErrorDefinition({name:y,parameters:p}){T.push({name:y===null?"":y,parameters:p.map(l)});for(let c of p){let a=m(c.typeName);s=s.concat(Y(n,a))}}}),!i)throw new R(`Contract not found: ${r}`);return{functions:o,errors:T,symbolImports:s}}function l({name:t,typeName:r,storageLocation:n}){let i="",{name:s,stateMutability:o}=N(r);return i+=s,o!==null&&(i+=` ${o}`),n!==null&&(i+=` ${n}`),t!==null&&(i+=` ${t}`),i}function N(t){if(t===null)return{name:"",stateMutability:null};if(t.type==="ElementaryTypeName")return{name:t.name,stateMutability:t.stateMutability};if(t.type==="UserDefinedTypeName")return{name:t.namePath,stateMutability:null};if(t.type==="ArrayTypeName"){let r="";t.length?.type==="NumberLiteral"?r=t.length.number:t.length?.type==="Identifier"&&(r=t.length.name);let{name:n,stateMutability:i}=N(t.baseTypeName);return{name:`${n}[${r}]`,stateMutability:i}}else throw new R(`Invalid typeName.type ${t.type}`)}function m(t){if(t?.type==="UserDefinedTypeName")return[t.namePath.split(".")[0]];if(t?.type==="ArrayTypeName"){let r=m(t.baseTypeName);if(t.length?.type==="Identifier"){let n=t.length.name;r.push(n.split(".")[0])}return r}else return[]}function Y(t,r){let n=[];for(let i of r){let s;if(S(t,{ImportDirective({path:o,symbolAliases:T}){if(T)for(let y of T){let p=y[1]||y[0];if(i===p){s={symbol:y[0],path:o};return}}}}),s)n.push(s);else throw new R(`Symbol "${i}" has no explicit import`)}return n}import{parse as W,visit as O}from"@solidity-parser/parser";function _(t,r,n){let i=W(t),s=n.at(0)===".",o={};return O(i,{TypeDefinition({name:T,definition:y},p){if(y.name.includes("fixed"))throw new R("Fixed point numbers are not supported by MUD");if(r.includes(T)){if(T in o)throw new R(`File has multiple user types with the same name: ${T}`);p?.type==="ContractDefinition"?o[T]={typeId:`${p.name}.${T}`,internalTypeId:y.name,importSymbol:p.name,fromPath:n,isRelativePath:s}:o[T]={typeId:T,internalTypeId:y.name,importSymbol:T,fromPath:n,isRelativePath:s}}}}),o}import j from"chalk";import f from"prettier";import H from"prettier-plugin-solidity";async function b(t,r){let n;r&&(n=await f.resolveConfig(r));try{return f.format(t,{plugins:[H],parser:"solidity-parse",printWidth:120,semi:!0,tabWidth:2,useTabs:!1,bracketSpacing:!0,...n})}catch(i){let s;return i instanceof Error?s=i.message:s=i,console.log(j.yellow(`Error during output formatting: ${s}`)),t}}async function U(t){return f.format(t,{parser:"typescript"})}import{mkdirSync as h,writeFileSync as E}from"fs";import{dirname as x}from"path";async function ge(t,r,n){let i=await b(t);h(x(r),{recursive:!0}),E(r,i),console.log(`${n}: ${r}`)}async function Ie(t,r,n){let i=await U(t);h(x(r),{recursive:!0}),E(r,i),console.log(`${n}: ${r}`)}import{readFileSync as $}from"fs";import K from"path";function de(t,r,n){let i={};for(let[o,{filePath:T}]of Object.entries(t))T in i||(i[T]=[]),i[T].push(o);let s={};for(let[o,T]of Object.entries(i)){let{filePath:y,data:p}=V(r,o,n),c=_(p,T,y);for(let[a,g]of Object.entries(c))if(g.internalTypeId!==t[a].internalType)throw new R(`User type "${a}" has internal type "${g.internalTypeId}" but config specifies "${t[a].internalType}"`);s=Object.assign(s,c)}return s}function V(t,r,n){if(r.at(0)===".")return{filePath:"./"+K.relative(t,r),data:$(r,"utf8")};{let i=r;for(let[s,o]of n)if(i.includes(s)){i=i.replace(s,o);break}return{filePath:r,data:$(i,"utf8")}}}function B(t){return t.replace(/\\/g,"/")}var w=`// SPDX-License-Identifier: MIT
pragma solidity >=0.8.21;

/* Autogenerated file. Do not edit manually. */`;function d(t,r){return v("",t,r)}function A(t){let r=t.filter(n=>n!==void 0&&n!=="");return v(",",r,n=>n)}function De({staticResourceData:t,keyTuple:r}){let n=t?"":"_tableId",i=t?"":"ResourceId _tableId",s=A(r.map(({name:y})=>y)),o=A(r.map(({name:y,typeWithLocation:p})=>`${p} ${y}`)),T=`
    bytes32[] memory _keyTuple = new bytes32[](${r.length});
    ${d(r,(y,p)=>`_keyTuple[${p}] = ${G(y.name,y)};`)}
  `;return{_tableId:n,_typedTableId:i,_keyArgs:s,_typedKeyArgs:o,_keyTupleDefinition:T}}function D(t,r){return B("./"+z.relative("./"+r,"./"+t))}function Pe(t){return P(t.map(r=>"path"in r?r:{symbol:r.symbol,path:D(r.fromPath,r.usedInPath)}))}function ve(t){return P(t.map(({symbol:r,fromPath:n,usedInPath:i})=>({symbol:r,path:D(n,i)})))}function P(t){let r=new Map;for(let{symbol:i,path:s}of t)r.has(s)||r.set(s,new Set),r.get(s)?.add(i);let n=[];for(let[i,s]of r){let o=[...s].join(", ");n.push(`import { ${o} } from "${B(i)}";`)}return n.join(`
`)}function Ce(t,r){let n="";return n+=r(void 0,"StoreSwitch","",void 0,""),n+=r(void 0,"StoreCore","",void 0,"_",!0),t&&(n+=`
`+r("IStore _store","_store"," (using the specified store)","_store","")),n}function Me(t,r,n){let i=`${r[0].toUpperCase()}${r.slice(1)}`,s="";return s+=n(i),t&&(s+=`
`+n("")),s}function Fe({namespace:t,name:r,offchainOnly:n,tableIdName:i}){let s=`
    ResourceId.wrap(
      bytes32(
        abi.encodePacked(
          ${n?"RESOURCE_OFFCHAIN_TABLE":"RESOURCE_TABLE"},
          bytes14("${t}"),
          bytes16("${r}")
        )
      )
    )
  `,o=`
    ResourceId constant _tableId = ${s};
    ResourceId constant ${i} = _tableId;
  `;return{hardcodedTableId:s,tableIdDefinition:o}}function G(t,{typeUnwrap:r,internalTypeId:n}){let i=r.length?`${r}(${t})`:t;if(n==="bytes32")return i;if(n.match(/^bytes\d{1,2}$/))return`bytes32(${i})`;if(n.match(/^uint\d{1,3}$/))return`bytes32(uint256(${i}))`;if(n.match(/^int\d{1,3}$/))return`bytes32(uint256(int256(${i})))`;if(n==="address")return`bytes32(uint256(uint160(${i})))`;if(n==="bool")return`_boolToBytes32(${i})`;throw new Error(`Unknown value type id ${n}`)}function X(t){return t.internalTypeId.match(/^bytes\d{1,2}$/)!==null}function ke(t){return X(t)?0:256-t.staticByteLength*8}function v(t,r,n){return r.map((i,s)=>n(i,s)+(s===r.length-1?"":t)).join(`
`)}function Oe(t){let r=w;return r+=d(t,({name:n,memberNames:i})=>`
    enum ${n} {
      ${A(i)}
    }
  `),r}function He(t){let{fields:r,keyTuple:n}=t,i="";for(let s of q([...r,...n]))i+=s;return r.some(({internalTypeId:s})=>s.match("bool"))&&(i+=`
    function _toBool(uint8 value) pure returns (bool result) {
      assembly {
        result := value
      }
    }
    `),n.some(({internalTypeId:s})=>s.match("bool"))&&(i+=`
    function _boolToBytes32(bool value) pure returns (bytes32 result) {
      assembly {
        result := value
      }
    }
    `),i}function q(t){let r=new Map,n=new Map;for(let{typeWrappingData:i,typeWrap:s,typeUnwrap:o,internalTypeId:T}of t){if(!i)continue;let{kind:y}=i;if(y==="staticArray"){let{elementType:p,staticLength:c}=i;r.set(s,J(s,p,c,T)),n.set(o,Q(o,p,c,T))}}return[...r.values(),...n.values()]}function J(t,r,n,i){return`
    function ${t}(
      ${i} memory _value
    ) pure returns (
      ${r}[${n}] memory _result
    ) {
      if (_value.length < ${n}) {
        // return an uninitialized array if the length is smaller than the fixed length to avoid memory corruption
        return _result;
      } else {
        // in memory static arrays are just dynamic arrays without the length byte
        // (without the length check this could lead to memory corruption)
        assembly {
          _result := add(_value, 0x20)
        }
      }
    }
  `}function Q(t,r,n,i){let s=n*32;return`
    function ${t}(
      ${r}[${n}] memory _value
    ) pure returns (
      ${i} memory _result
    ) {
      _result = new ${i}(${n});
      uint256 fromPointer;
      uint256 toPointer;
      assembly {
        fromPointer := _value
        toPointer := add(_result, 0x20)
      }
      Memory.copy(fromPointer, toPointer, ${s});
    }
  `}import{SchemaType as e}from"@latticexyz/schema-type/deprecated";var Qe={[e.UINT8]:"RecsType.Number",[e.UINT16]:"RecsType.Number",[e.UINT24]:"RecsType.Number",[e.UINT32]:"RecsType.Number",[e.UINT40]:"RecsType.Number",[e.UINT48]:"RecsType.Number",[e.UINT56]:"RecsType.BigInt",[e.UINT64]:"RecsType.BigInt",[e.UINT72]:"RecsType.BigInt",[e.UINT80]:"RecsType.BigInt",[e.UINT88]:"RecsType.BigInt",[e.UINT96]:"RecsType.BigInt",[e.UINT104]:"RecsType.BigInt",[e.UINT112]:"RecsType.BigInt",[e.UINT120]:"RecsType.BigInt",[e.UINT128]:"RecsType.BigInt",[e.UINT136]:"RecsType.BigInt",[e.UINT144]:"RecsType.BigInt",[e.UINT152]:"RecsType.BigInt",[e.UINT160]:"RecsType.BigInt",[e.UINT168]:"RecsType.BigInt",[e.UINT176]:"RecsType.BigInt",[e.UINT184]:"RecsType.BigInt",[e.UINT192]:"RecsType.BigInt",[e.UINT200]:"RecsType.BigInt",[e.UINT208]:"RecsType.BigInt",[e.UINT216]:"RecsType.BigInt",[e.UINT224]:"RecsType.BigInt",[e.UINT232]:"RecsType.BigInt",[e.UINT240]:"RecsType.BigInt",[e.UINT248]:"RecsType.BigInt",[e.UINT256]:"RecsType.BigInt",[e.INT8]:"RecsType.Number",[e.INT16]:"RecsType.Number",[e.INT24]:"RecsType.Number",[e.INT32]:"RecsType.Number",[e.INT40]:"RecsType.Number",[e.INT48]:"RecsType.Number",[e.INT56]:"RecsType.BigInt",[e.INT64]:"RecsType.BigInt",[e.INT72]:"RecsType.BigInt",[e.INT80]:"RecsType.BigInt",[e.INT88]:"RecsType.BigInt",[e.INT96]:"RecsType.BigInt",[e.INT104]:"RecsType.BigInt",[e.INT112]:"RecsType.BigInt",[e.INT120]:"RecsType.BigInt",[e.INT128]:"RecsType.BigInt",[e.INT136]:"RecsType.BigInt",[e.INT144]:"RecsType.BigInt",[e.INT152]:"RecsType.BigInt",[e.INT160]:"RecsType.BigInt",[e.INT168]:"RecsType.BigInt",[e.INT176]:"RecsType.BigInt",[e.INT184]:"RecsType.BigInt",[e.INT192]:"RecsType.BigInt",[e.INT200]:"RecsType.BigInt",[e.INT208]:"RecsType.BigInt",[e.INT216]:"RecsType.BigInt",[e.INT224]:"RecsType.BigInt",[e.INT232]:"RecsType.BigInt",[e.INT240]:"RecsType.BigInt",[e.INT248]:"RecsType.BigInt",[e.INT256]:"RecsType.BigInt",[e.BYTES1]:"RecsType.String",[e.BYTES2]:"RecsType.String",[e.BYTES3]:"RecsType.String",[e.BYTES4]:"RecsType.String",[e.BYTES5]:"RecsType.String",[e.BYTES6]:"RecsType.String",[e.BYTES7]:"RecsType.String",[e.BYTES8]:"RecsType.String",[e.BYTES9]:"RecsType.String",[e.BYTES10]:"RecsType.String",[e.BYTES11]:"RecsType.String",[e.BYTES12]:"RecsType.String",[e.BYTES13]:"RecsType.String",[e.BYTES14]:"RecsType.String",[e.BYTES15]:"RecsType.String",[e.BYTES16]:"RecsType.String",[e.BYTES17]:"RecsType.String",[e.BYTES18]:"RecsType.String",[e.BYTES19]:"RecsType.String",[e.BYTES20]:"RecsType.String",[e.BYTES21]:"RecsType.String",[e.BYTES22]:"RecsType.String",[e.BYTES23]:"RecsType.String",[e.BYTES24]:"RecsType.String",[e.BYTES25]:"RecsType.String",[e.BYTES26]:"RecsType.String",[e.BYTES27]:"RecsType.String",[e.BYTES28]:"RecsType.String",[e.BYTES29]:"RecsType.String",[e.BYTES30]:"RecsType.String",[e.BYTES31]:"RecsType.String",[e.BYTES32]:"RecsType.String",[e.BOOL]:"RecsType.Boolean",[e.ADDRESS]:"RecsType.String",[e.UINT8_ARRAY]:"RecsType.NumberArray",[e.UINT16_ARRAY]:"RecsType.NumberArray",[e.UINT24_ARRAY]:"RecsType.NumberArray",[e.UINT32_ARRAY]:"RecsType.NumberArray",[e.UINT40_ARRAY]:"RecsType.NumberArray",[e.UINT48_ARRAY]:"RecsType.NumberArray",[e.UINT56_ARRAY]:"RecsType.BigIntArray",[e.UINT64_ARRAY]:"RecsType.BigIntArray",[e.UINT72_ARRAY]:"RecsType.BigIntArray",[e.UINT80_ARRAY]:"RecsType.BigIntArray",[e.UINT88_ARRAY]:"RecsType.BigIntArray",[e.UINT96_ARRAY]:"RecsType.BigIntArray",[e.UINT104_ARRAY]:"RecsType.BigIntArray",[e.UINT112_ARRAY]:"RecsType.BigIntArray",[e.UINT120_ARRAY]:"RecsType.BigIntArray",[e.UINT128_ARRAY]:"RecsType.BigIntArray",[e.UINT136_ARRAY]:"RecsType.BigIntArray",[e.UINT144_ARRAY]:"RecsType.BigIntArray",[e.UINT152_ARRAY]:"RecsType.BigIntArray",[e.UINT160_ARRAY]:"RecsType.BigIntArray",[e.UINT168_ARRAY]:"RecsType.BigIntArray",[e.UINT176_ARRAY]:"RecsType.BigIntArray",[e.UINT184_ARRAY]:"RecsType.BigIntArray",[e.UINT192_ARRAY]:"RecsType.BigIntArray",[e.UINT200_ARRAY]:"RecsType.BigIntArray",[e.UINT208_ARRAY]:"RecsType.BigIntArray",[e.UINT216_ARRAY]:"RecsType.BigIntArray",[e.UINT224_ARRAY]:"RecsType.BigIntArray",[e.UINT232_ARRAY]:"RecsType.BigIntArray",[e.UINT240_ARRAY]:"RecsType.BigIntArray",[e.UINT248_ARRAY]:"RecsType.BigIntArray",[e.UINT256_ARRAY]:"RecsType.BigIntArray",[e.INT8_ARRAY]:"RecsType.NumberArray",[e.INT16_ARRAY]:"RecsType.NumberArray",[e.INT24_ARRAY]:"RecsType.NumberArray",[e.INT32_ARRAY]:"RecsType.NumberArray",[e.INT40_ARRAY]:"RecsType.NumberArray",[e.INT48_ARRAY]:"RecsType.NumberArray",[e.INT56_ARRAY]:"RecsType.BigIntArray",[e.INT64_ARRAY]:"RecsType.BigIntArray",[e.INT72_ARRAY]:"RecsType.BigIntArray",[e.INT80_ARRAY]:"RecsType.BigIntArray",[e.INT88_ARRAY]:"RecsType.BigIntArray",[e.INT96_ARRAY]:"RecsType.BigIntArray",[e.INT104_ARRAY]:"RecsType.BigIntArray",[e.INT112_ARRAY]:"RecsType.BigIntArray",[e.INT120_ARRAY]:"RecsType.BigIntArray",[e.INT128_ARRAY]:"RecsType.BigIntArray",[e.INT136_ARRAY]:"RecsType.BigIntArray",[e.INT144_ARRAY]:"RecsType.BigIntArray",[e.INT152_ARRAY]:"RecsType.BigIntArray",[e.INT160_ARRAY]:"RecsType.BigIntArray",[e.INT168_ARRAY]:"RecsType.BigIntArray",[e.INT176_ARRAY]:"RecsType.BigIntArray",[e.INT184_ARRAY]:"RecsType.BigIntArray",[e.INT192_ARRAY]:"RecsType.BigIntArray",[e.INT200_ARRAY]:"RecsType.BigIntArray",[e.INT208_ARRAY]:"RecsType.BigIntArray",[e.INT216_ARRAY]:"RecsType.BigIntArray",[e.INT224_ARRAY]:"RecsType.BigIntArray",[e.INT232_ARRAY]:"RecsType.BigIntArray",[e.INT240_ARRAY]:"RecsType.BigIntArray",[e.INT248_ARRAY]:"RecsType.BigIntArray",[e.INT256_ARRAY]:"RecsType.BigIntArray",[e.BYTES1_ARRAY]:"RecsType.BigIntArray",[e.BYTES2_ARRAY]:"RecsType.BigIntArray",[e.BYTES3_ARRAY]:"RecsType.BigIntArray",[e.BYTES4_ARRAY]:"RecsType.BigIntArray",[e.BYTES5_ARRAY]:"RecsType.BigIntArray",[e.BYTES6_ARRAY]:"RecsType.BigIntArray",[e.BYTES7_ARRAY]:"RecsType.BigIntArray",[e.BYTES8_ARRAY]:"RecsType.BigIntArray",[e.BYTES9_ARRAY]:"RecsType.BigIntArray",[e.BYTES10_ARRAY]:"RecsType.BigIntArray",[e.BYTES11_ARRAY]:"RecsType.BigIntArray",[e.BYTES12_ARRAY]:"RecsType.BigIntArray",[e.BYTES13_ARRAY]:"RecsType.BigIntArray",[e.BYTES14_ARRAY]:"RecsType.BigIntArray",[e.BYTES15_ARRAY]:"RecsType.BigIntArray",[e.BYTES16_ARRAY]:"RecsType.BigIntArray",[e.BYTES17_ARRAY]:"RecsType.BigIntArray",[e.BYTES18_ARRAY]:"RecsType.BigIntArray",[e.BYTES19_ARRAY]:"RecsType.BigIntArray",[e.BYTES20_ARRAY]:"RecsType.BigIntArray",[e.BYTES21_ARRAY]:"RecsType.BigIntArray",[e.BYTES22_ARRAY]:"RecsType.BigIntArray",[e.BYTES23_ARRAY]:"RecsType.BigIntArray",[e.BYTES24_ARRAY]:"RecsType.BigIntArray",[e.BYTES25_ARRAY]:"RecsType.BigIntArray",[e.BYTES26_ARRAY]:"RecsType.BigIntArray",[e.BYTES27_ARRAY]:"RecsType.BigIntArray",[e.BYTES28_ARRAY]:"RecsType.BigIntArray",[e.BYTES29_ARRAY]:"RecsType.BigIntArray",[e.BYTES30_ARRAY]:"RecsType.BigIntArray",[e.BYTES31_ARRAY]:"RecsType.BigIntArray",[e.BYTES32_ARRAY]:"RecsType.BigIntArray",[e.BOOL_ARRAY]:"RecsType.T",[e.ADDRESS_ARRAY]:"RecsType.StringArray",[e.BYTES]:"RecsType.String",[e.STRING]:"RecsType.String"};export{re as contractToInterface,_ as extractUserTypes,ge as formatAndWriteSolidity,Ie as formatAndWriteTypescript,b as formatSolidity,U as formatTypescript,ke as getLeftPaddingBits,X as isLeftAligned,de as loadAndExtractUserTypes,B as posixPath,P as renderAbsoluteImports,A as renderArguments,De as renderCommonData,Oe as renderEnums,Pe as renderImports,d as renderList,ve as renderRelativeImports,Fe as renderTableId,He as renderTypeHelpers,G as renderValueTypeToBytes32,Me as renderWithFieldSuffix,Ce as renderWithStore,w as renderedSolidityHeader,Qe as schemaTypesToRecsTypeStrings,D as solidityRelativeImportPath};
//# sourceMappingURL=codegen.js.map