"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.minInt144 = exports.minInt136 = exports.minInt128 = exports.minInt120 = exports.minInt112 = exports.minInt104 = exports.minInt96 = exports.minInt88 = exports.minInt80 = exports.minInt72 = exports.minInt64 = exports.minInt56 = exports.minInt48 = exports.minInt40 = exports.minInt32 = exports.minInt24 = exports.minInt16 = exports.minInt8 = exports.maxInt256 = exports.maxInt248 = exports.maxInt240 = exports.maxInt232 = exports.maxInt224 = exports.maxInt216 = exports.maxInt208 = exports.maxInt200 = exports.maxInt192 = exports.maxInt184 = exports.maxInt176 = exports.maxInt168 = exports.maxInt160 = exports.maxInt152 = exports.maxInt144 = exports.maxInt136 = exports.maxInt128 = exports.maxInt120 = exports.maxInt112 = exports.maxInt104 = exports.maxInt96 = exports.maxInt88 = exports.maxInt80 = exports.maxInt72 = exports.maxInt64 = exports.maxInt56 = exports.maxInt48 = exports.maxInt40 = exports.maxInt32 = exports.maxInt24 = exports.maxInt16 = exports.maxInt8 = void 0;
exports.maxUint256 = exports.maxUint248 = exports.maxUint240 = exports.maxUint232 = exports.maxUint224 = exports.maxUint216 = exports.maxUint208 = exports.maxUint200 = exports.maxUint192 = exports.maxUint184 = exports.maxUint176 = exports.maxUint168 = exports.maxUint160 = exports.maxUint152 = exports.maxUint144 = exports.maxUint136 = exports.maxUint128 = exports.maxUint120 = exports.maxUint112 = exports.maxUint104 = exports.maxUint96 = exports.maxUint88 = exports.maxUint80 = exports.maxUint72 = exports.maxUint64 = exports.maxUint56 = exports.maxUint48 = exports.maxUint40 = exports.maxUint32 = exports.maxUint24 = exports.maxUint16 = exports.maxUint8 = exports.minInt256 = exports.minInt248 = exports.minInt240 = exports.minInt232 = exports.minInt224 = exports.minInt216 = exports.minInt208 = exports.minInt200 = exports.minInt192 = exports.minInt184 = exports.minInt176 = exports.minInt168 = exports.minInt160 = exports.minInt152 = void 0;
exports.maxInt8 = 2n ** (8n - 1n);
exports.maxInt16 = 2n ** (16n - 1n);
exports.maxInt24 = 2n ** (24n - 1n);
exports.maxInt32 = 2n ** (32n - 1n);
exports.maxInt40 = 2n ** (40n - 1n);
exports.maxInt48 = 2n ** (48n - 1n);
exports.maxInt56 = 2n ** (56n - 1n);
exports.maxInt64 = 2n ** (64n - 1n);
exports.maxInt72 = 2n ** (72n - 1n);
exports.maxInt80 = 2n ** (80n - 1n);
exports.maxInt88 = 2n ** (88n - 1n);
exports.maxInt96 = 2n ** (96n - 1n);
exports.maxInt104 = 2n ** (104n - 1n);
exports.maxInt112 = 2n ** (112n - 1n);
exports.maxInt120 = 2n ** (120n - 1n);
exports.maxInt128 = 2n ** (128n - 1n);
exports.maxInt136 = 2n ** (136n - 1n);
exports.maxInt144 = 2n ** (144n - 1n);
exports.maxInt152 = 2n ** (152n - 1n);
exports.maxInt160 = 2n ** (160n - 1n);
exports.maxInt168 = 2n ** (168n - 1n);
exports.maxInt176 = 2n ** (176n - 1n);
exports.maxInt184 = 2n ** (184n - 1n);
exports.maxInt192 = 2n ** (192n - 1n);
exports.maxInt200 = 2n ** (200n - 1n);
exports.maxInt208 = 2n ** (208n - 1n);
exports.maxInt216 = 2n ** (216n - 1n);
exports.maxInt224 = 2n ** (224n - 1n);
exports.maxInt232 = 2n ** (232n - 1n);
exports.maxInt240 = 2n ** (240n - 1n);
exports.maxInt248 = 2n ** (248n - 1n);
exports.maxInt256 = 2n ** (256n - 1n);
exports.minInt8 = -(2n ** 8n);
exports.minInt16 = -(2n ** 16n);
exports.minInt24 = -(2n ** 24n);
exports.minInt32 = -(2n ** 32n);
exports.minInt40 = -(2n ** 40n);
exports.minInt48 = -(2n ** 48n);
exports.minInt56 = -(2n ** 56n);
exports.minInt64 = -(2n ** 64n);
exports.minInt72 = -(2n ** 72n);
exports.minInt80 = -(2n ** 80n);
exports.minInt88 = -(2n ** 88n);
exports.minInt96 = -(2n ** 96n);
exports.minInt104 = -(2n ** 104n);
exports.minInt112 = -(2n ** 112n);
exports.minInt120 = -(2n ** 120n);
exports.minInt128 = -(2n ** 128n);
exports.minInt136 = -(2n ** 136n);
exports.minInt144 = -(2n ** 144n);
exports.minInt152 = -(2n ** 152n);
exports.minInt160 = -(2n ** 160n);
exports.minInt168 = -(2n ** 168n);
exports.minInt176 = -(2n ** 176n);
exports.minInt184 = -(2n ** 184n);
exports.minInt192 = -(2n ** 192n);
exports.minInt200 = -(2n ** 200n);
exports.minInt208 = -(2n ** 208n);
exports.minInt216 = -(2n ** 216n);
exports.minInt224 = -(2n ** 224n);
exports.minInt232 = -(2n ** 232n);
exports.minInt240 = -(2n ** 240n);
exports.minInt248 = -(2n ** 248n);
exports.minInt256 = -(2n ** 256n);
exports.maxUint8 = 2n ** 8n;
exports.maxUint16 = 2n ** 16n;
exports.maxUint24 = 2n ** 24n;
exports.maxUint32 = 2n ** 32n;
exports.maxUint40 = 2n ** 40n;
exports.maxUint48 = 2n ** 48n;
exports.maxUint56 = 2n ** 56n;
exports.maxUint64 = 2n ** 64n;
exports.maxUint72 = 2n ** 72n;
exports.maxUint80 = 2n ** 80n;
exports.maxUint88 = 2n ** 88n;
exports.maxUint96 = 2n ** 96n;
exports.maxUint104 = 2n ** 104n;
exports.maxUint112 = 2n ** 112n;
exports.maxUint120 = 2n ** 120n;
exports.maxUint128 = 2n ** 128n;
exports.maxUint136 = 2n ** 136n;
exports.maxUint144 = 2n ** 144n;
exports.maxUint152 = 2n ** 152n;
exports.maxUint160 = 2n ** 160n;
exports.maxUint168 = 2n ** 168n;
exports.maxUint176 = 2n ** 176n;
exports.maxUint184 = 2n ** 184n;
exports.maxUint192 = 2n ** 192n;
exports.maxUint200 = 2n ** 200n;
exports.maxUint208 = 2n ** 208n;
exports.maxUint216 = 2n ** 216n;
exports.maxUint224 = 2n ** 224n;
exports.maxUint232 = 2n ** 232n;
exports.maxUint240 = 2n ** 240n;
exports.maxUint248 = 2n ** 248n;
exports.maxUint256 = 2n ** 256n;
//# sourceMappingURL=number.js.map